ER -> RELATION

* RELATION으로 MAPPING하면서 ATTRIBUTE NAME이 달라지거나, 삭제되는 등 수정사항이 있어 ER DIAGRAM 수정사항 제출함. (Team6_er_modify+Relation.pdf)

ENTITY 및 RELATIONSHIP 변경사항(ATTRIBUTE 변경사항은 하단 MAPPINGS에서 표시) :
EVALUATES(MEMBER-MEMBER) -> DELETE : MANAGER만 EVALUATE하는 모델로 변경.
APPLIES(TEAM-MATCH) -> DELETE : TEAM이 직접 APPLY 하지 않고, 개인별로 APPLY 하는 것으로 변경.
CONTRACT(SERVER-OWNER) -> DELETE : SERVER ENTITY를 이용하지 않아 필요하지 않음.
SERVER(ENTITY) -> DELETE : 1개 서버로 운영하여 100개 레코드 존재하지 않음.


MAPPINGS(Entity to Relation):

USER(ENTITY)
 -> USERS : ID_NUMBER(PK), NAME, SEX, YOB(AGE는 지속적으로 변동이 필요해 Year Of Birth로 변경), JOB, PASSWD

TEAM(ENTITY)
 -> TEAM : TEAM_ID(PK), TEAM_NAME, TEAM_TIER(Change to View : Trigger에서 집계함수 지원을 하지 않음)

OWNER(ENTITY)
 -> OWNER : OWNER_HP(PK), NAME


MANAGER(WEAK ENTITY) + SIGNUP_MANAGER(RELATIONSHIP)
 -> MANAGER : ID_NUMBER(PK, FK from USERS = ID_NUMBER), BANK_ACCOUNT

MEMBER(WEAK ENTITY) + SIGNUP_MEMBER(RELATIONSHIP) 
 -> MEMBER : ID_NUMBER(PK, FK from USERS = ID_NUMBER), TIER(Change to View : Trigger에서 집계함수 지원을 하지 않음), PREPAID_ MONEY

FIELD(ENTITY), HAS(RELATIONSHIP)
 -> FIELD : FIELD_ID(PK), NAME, TYPE(DELETE : 구장별 종목 제한 삭제), FIELD_HP, OWNER_HP(FK from OWNER = OWNER_HP), ADDRESS


TRAINING(ENTITY), REGISTER(RELATIONSHIP)
 -> TRAINING : CLASS_ID(PK), DATE_TIME, TUTOR_ID(FK from MEMBER = ID_NUMBER), CLASS_ID(PK, FK from TRAINING = CLASS_ID), RECOMMEND_TIER, SUBJECT, PLACE, MAX_NUM, WAGE, COST_PER_ONE

MATCH(ENTITY), HOLDS(RELATIONSHIP), APPLIES(RELATIONSHIP, MANAGER-MATCH)
 -> MATCH : MATCH_ID(PK), DATE_TIME, PLACE(FK from FIELD = FIELD_ID), TYPE, SEX_CONSTRAINT, MANAGER_ID(FK from MANAGER = ID_NUMBER), WAGE, GAME_TIER(Change to View : Trigger에서 집계함수 지원을 하지 않음), COST_PER_ONE

MAPPINGS(Relationship to Relation):

EVALUATES(RELATIONSHIP, MANAGER-MEMBER)
 -> MAN_EVAL_MEM : (MEM_ID(FK from MEMBER = ID_NUMBER), MAN_ID(FK from MANAGER = ID_NUMBER))(PK), EVAL_TIER, UPDATE_TIME

ORGANIZE(RELATIONSHIP), TEAM_MEMBER(MULTIVALUE_ATTRIBUTE)
 -> TEAM_MEM : (TEAM_ID(FK from TEAM = TEAM_ID), MEM_ID(FK from USERS = ID_NUMBER))(PK)

ENROLLS(RELATIONSHIP), TUTEE(MULTIVALUE_ATTRIBUTE)
 -> TRAIN_ENROLLS : (CLASS_ID(FK from TRAINING = CLASS_ID), TUTEE_ID(FK from MEMBER = ID_NUMBER))(PK)

APPLIES(RELATIONSHIP, MEMBER-MATCH)
 -> MATCH_APP_MEMBER : (MATCH_ID(FK from MATCH = MATCH_ID), MEMBER_ID(FK from MEMBER  = ID_NUMBER))(PK)



-- Type 1: A single-table query => Selection + Projection
-- 1.1 (USED)
SELECT ID_NUMBER
FROM MEMBER
WHERE ID_NUMBER = 'U852-54-8656';
-- 1.2 (USED)
SELECT *
FROM FIELD
WHERE OWNER_HP = '053-437-9417';

-- Type 2: Multi-way join with join predicates in WHERE
-- 2.1
SELECT U.ID_NUMBER, U.NAME, U.JOB, M.PREPAID_MONEY
FROM USERS U, MEMBER M
WHERE U.SEX = 'M' AND M.PREPAID_MONEY > 10000 AND U.ID_NUMBER = M.ID_NUMBER;
-- 2.2 (USED)
SELECT U.*, M.PREPAID_MONEY, MV.TIER
FROM USERS U, MEMBER M, MEMBER_EVAL_VIEW MV
WHERE U.ID_NUMBER = M.ID_NUMBER AND U.ID_NUMBER = MV.MEM_ID AND U.ID_NUMBER = 'U673-07-7888';

-- Type 3: Aggregation + multi-way join with join predicates + with GROUP BY
-- 3.1 (USED)
SELECT *
FROM MATCH NATURAL JOIN (
    SELECT MATCH_ID, count(MEMBER_ID)
    FROM MATCH_APP_MEMBER
    GROUP BY MATCH_ID)
ORDER BY DATE_TIME DESC ;
-- 3.2
SELECT TEAM.TEAM_NAME
FROM TEAM NATURAL JOIN (
    SELECT TEAM_MEM.TEAM_ID, COUNT(TEAM_MEM.MEM_ID) AS TEAM_MEM_CNT
    FROM TEAM_MEM
    GROUP BY TEAM_MEM.TEAM_ID
    HAVING COUNT(TEAM_MEM.MEM_ID) > 3);

-- Type 4: Subquery
-- 4.1
SELECT *
FROM MATCH
WHERE MATCH_ID IN (
    SELECT MATCH_ID
    FROM MATCH_APP_MEMBER
    WHERE MEMBER_ID = 'U673-07-7888');
-- 4.2
SELECT F.NAME, F.ADDRESS
FROM FIELD F
WHERE F.FIELD_ID NOT IN (
    SELECT FIELD_ID
    FROM FIELD
    WHERE OWNER_HP LIKE '%00%');

-- Type 5: EXISTS를 포함하는 Subquery
-- 5.1 (USED // TRAINING 내용 조회)
SELECT T.CLASS_ID, T.DATE_TIME, U.NAME, T.RECOMMEND_TIER, T.SUBJECT, T.PLACE, T.COST_PER_ONE
FROM USERS U INNER JOIN (
    SELECT *
    FROM TRAINING TX
    WHERE EXISTS(
        SELECT *
        FROM (
            SELECT class_id
            FROM train_enrolls TE
            WHERE TE.tutee_id = 'U655-32-7319') X
        WHERE TX.CLASS_ID = X.CLASS_ID)) T ON U.ID_NUMBER = T.TUTOR_ID;
-- 5.2
SELECT TEAM_NAME
FROM TEAM
WHERE EXISTS(
    SELECT *
    FROM (
        SELECT TEAM_ID
        FROM TEAM_MEM
        WHERE MEM_ID LIKE '%00%') X
    WHERE TEAM.TEAM_ID = X.TEAM_ID);

-- Type 6: Selection + Projection + IN predicates
-- 6.1 (USED // MATCH 내용 조회)
SELECT m.*, f.NAME
FROM MATCH m
INNER JOIN FIELD f ON m.PLACE_ID = f.FIELD_ID
WHERE m.MATCH_ID IN (
   SELECT mm.MATCH_ID
                FROM MATCH_APP_MEMBER mm
                 WHERE mm.MEMBER_ID = 'U673-07-7888')
ORDER BY DATE_TIME DESC


-- 6.2
SELECT TEAM_NAME
FROM TEAM
WHERE TEAM_ID IN (
    SELECT TEAM_ID
    FROM TEAM_MEM
    WHERE MEM_ID LIKE '%00%');

-- Type 7: In-line view를 활용한 Query
-- 7.1 (USED)
SELECT TEAM.TEAM_NAME
FROM TEAM NATURAL JOIN (
    SELECT TEAM_MEM.TEAM_ID, COUNT(TEAM_MEM.MEM_ID) AS TEAM_MEM_CNT
    FROM TEAM_MEM
    GROUP BY TEAM_MEM.TEAM_ID
    HAVING COUNT(TEAM_MEM.MEM_ID) > 3);
-- 7.2 (USED)
SELECT *
FROM TRAINING NATURAL JOIN (
    SELECT CLASS_ID, count(TUTEE_ID)
    FROM TRAIN_ENROLLS
    GROUP BY CLASS_ID)
ORDER BY DATE_TIME DESC ;

--Type 8: Multi-way join with join predicates in WHERE + ORDER BY
-- 8.1
SELECT U.ID_NUMBER, U.NAME, U.JOB, M.PREPAID_MONEY
FROM USERS U, MEMBER M
WHERE U.SEX = 'M' AND M.PREPAID_MONEY > 10000 AND U.ID_NUMBER = M.ID_NUMBER
ORDER BY PREPAID_MONEY DESC;
-- 8.2
SELECT MATCH_ID, PLACE_ID, NAME
FROM MATCH, FIELD
WHERE FIELD.OWNER_HP LIKE '%8%' AND FIELD.FIELD_ID = MATCH.PLACE_ID
ORDER BY PLACE_ID;

-- Type 9: Aggregation + multi-way join with join predicates + with GROUP BY + ORDER BY
-- 9.1
SELECT TEAM.TEAM_ID, TEAM_NAME, COUNT(TEAM_MEM.MEM_ID) AS TEAM_MEM_CNT
FROM TEAM INNER JOIN TEAM_MEM ON TEAM.TEAM_ID = TEAM_MEM.TEAM_ID
GROUP BY (TEAM.TEAM_ID, TEAM_NAME)
HAVING COUNT(TEAM_MEM.MEM_ID) > 5
ORDER BY COUNT(TEAM_MEM.MEM_ID);
-- 9.2
SELECT TRAINING.CLASS_ID, COUNT(TRAIN_ENROLLS.TUTEE_ID) AS CLASS_MEM_CNT
FROM TRAINING INNER JOIN TRAIN_ENROLLS ON TRAINING.CLASS_ID = TRAIN_ENROLLS.CLASS_ID
WHERE ABS(TRAINING.DATE_TIME - SYSDATE) > 50
GROUP BY TRAINING.CLASS_ID
HAVING COUNT(TRAIN_ENROLLS.TUTEE_ID) > 5
ORDER BY CLASS_MEM_CNT DESC;

-- Type 10: SET operation (UNION, SET DIFFERENCE, INTERSECT 등중 하나)를 활용한 query
-- 10.1 (USED // TIME, PLACE에 따른 MATCH 검색)
SELECT M.*, F.NAME
FROM MATCH M
INNER JOIN FIELD F ON M.PLACE_ID = F.FIELD_ID
WHERE M.MATCH_ID IN (
    SELECT DISTINCT MATCH_ID
    FROM MATCH M1
    WHERE M1.DATE_TIME = '2023-09-15'
)
AND M.MATCH_ID IN (
    SELECT DISTINCT M2.MATCH_ID
    FROM MATCH M2
    WHERE M2.PLACE_ID IN (
        SELECT FIELD_ID
        FROM FIELD
        WHERE ADDRESS LIKE '%Daegu%'
    )
)
AND M.MATCH_ID IN (SELECT MATCH_ID FROM MATCH_EVAL_VIEW);

-- 10.2 (USED // SUBJECT, RECOMMEND_TIER에 따른 TRAINING 검색)
SELECT T.CLASS_ID, t.DATE_TIME, U.NAME, T.RECOMMEND_TIER, T.SUBJECT, T.PLACE, T.COST_PER_ONE
FROM USERS U INNER JOIN (
select *
from training T
WHERE T.CLASS_ID IN (
(SELECT DISTINCT CLASS_ID
FROM TRAINING T1
WHERE T1.SUBJECT = 'Shooting')
INTERSECT
(SELECT DISTINCT T2.CLASS_ID
FROM TRAINING T2
WHERE T2.RECOMMEND_TIER = 'B'))) T on U.ID_NUMBER = T.TUTOR_ID
order by T.DATE_TIME;



